---
name: 'Setup Nim environment'
description: 'Setup a Nim environment and add it to the PATH'
author: 'jiro4989'

inputs:
  nim-version:
    description: >-
      The Nim version to download (if necessary)
      and use. Example 1.0.2
    default: 'stable'
  nim-install-directory:
    description: >-
      The Nim compiler installation directory.
    default: '.nim_runtime'
  parent-nim-install-directory:
    description: >-
      The Nim compiler installation parent directory.
      It will be placed in the current directory if this parameter is empty.
    default: ''
  repo-token:
    description: 'The GITHUB_TOKEN secret'
    required: false

  # NOTE: Unused parameters. These parameters were used in setup-nim-action@v1.
  # setup-nim-action@v2 does not require these. These are left for backward compatibility.
  no-color:
    description: '[Deprecated] unused parameter'
    default: false
  "yes":
    description: '[Deprecated] unused parameter'
    default: false

runs:
  using: 'composite'
  steps:
    - name: Install nim
      shell: bash
      run: |
        "${{ github.action_path }}/install_nim.sh" \
          --nim-version "${{ inputs.nim-version }}" \
          --parent-nim-install-directory "${{ inputs.parent-nim-install-directory }}" \
          --nim-install-directory "${{ inputs.nim-install-directory }}" \
          --os "${{ runner.os }}" \
          --repo-token "${{ inputs.repo-token }}"

    - name: Set PATH for Unix
      shell: bash
      run: |
        parent="${{ inputs.parent-nim-install-directory }}"
        if [[ "${parent}" = "" ]]; then
          parent="$PWD"
        fi
        echo "$parent/${{ inputs.nim-install-directory }}/bin" >> "$GITHUB_PATH"
        echo "$HOME/.nimble/bin" >> "$GITHUB_PATH"
      if: runner.os != 'Windows'

    - name: Set PATH for Windows
      shell: pwsh
      run: |
        $parent = "${{ inputs.parent-nim-install-directory }}"
        if ($parent -eq "") {
          $parent = "$Pwd"
        }
        echo "$parent\${{ inputs.nim-install-directory }}\bin" >> $Env:GITHUB_PATH
        mkdir -Force ~\.nimble\bin
        (Resolve-Path ~\.nimble\bin).Path >> $Env:GITHUB_PATH
      if: runner.os == 'Windows'

    - name: Print nim directory
      shell: bash
      run: |
        echo "installed nim fullpath: $(which nim)"

    - name: Print nim version
      shell: bash
      run: nim -v

    - name: Print nimble version
      shell: bash
      run: nimble -v
