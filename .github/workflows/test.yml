name: build

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'LICENSE'
      - '*.md'

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skip job"

  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "not contains '[skip ci]'"

  test-typescript:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v2
      - name: Run test
        run: npm test

  test:
    runs-on: ${{ matrix.os }}
    needs: before
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        version:
          - 1.0.0
          - stable
          - devel
        exclude:
          - os: macOS-latest
            version: devel
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          nim-version: ${{ matrix.version }}

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

  test-glob-version:
    runs-on: ubuntu-latest
    needs: before
    strategy:
      matrix:
        version:
          - 1.2.x
          - 1.x
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          nim-version: ${{ matrix.version }}

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

  test_v1:
    runs-on: ubuntu-latest
    needs: before
    strategy:
      matrix:
        type:
          - default
          - no-color
          - yes
          - all
    steps:
      - uses: actions/checkout@v2
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v1
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble

      - uses: jiro4989/setup-nim-action@v1
        if: matrix.type == 'default'
      - uses: ./
        with:
          no-color: true
        if: matrix.type == 'no-color'
      - uses: ./
        with:
          yes: true
        if: matrix.type == 'yes'
      - uses: ./
        with:
          no-color: true
          yes: true
        if: matrix.type == 'all'

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

  test_devel_latest:
    runs-on: ${{ matrix.os }}
    needs: before
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        nim-version:
          - 'devel --latest'
        cache-key:
          - devel-latest
    steps:
      - uses: actions/checkout@v2

      # Set cache key
      - name: Get Date
        id: get-date
        run: echo "::set-output name=date::$(date "+%Y-%m-%d")"
        shell: bash

      - name: Cache choosenim
        id: cache-choosenim
        uses: actions/cache@v1
        with:
          path: ~/.choosenim
          key: ${{ runner.os }}-choosenim-${{ matrix.cache-key }}-${{ steps.get-date.outputs.date }}
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v1
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ matrix.cache-key }}
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: "${{ matrix.nim-version }}"

      - name: Print Nim version
        run: nim -v
      - name: Print Nimble version
        run: nimble -v
      - name: Run build test
        run: nimble install -Y nimjson
      - name: Run command
        run: nimjson -h

